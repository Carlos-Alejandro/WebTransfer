generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Roles {
  id            String          @id @default(uuid())
  nombre        String          @unique
  rolesPermisos RolesPermisos[]
  usuarios      Usuarios[]
}

model RolesPermisos {
  rolId     String
  permisoId String
  permiso   Permisos @relation(fields: [permisoId], references: [id])
  rol       Roles    @relation(fields: [rolId], references: [id])

  @@id([rolId, permisoId])
}

model Permisos {
  id            String          @id @default(uuid())
  nombre        String          @unique
  descripcion   String
  rolesPermisos RolesPermisos[]
}

model Usuarios {
  id            String      @id @default(uuid())
  nombre        String
  correo        String      @unique
  contrasena    String
  telefono      String?
  rolId         String
  estado        Boolean     @default(true)
  fechaCreacion DateTime    @default(now())
  opiniones     Opiniones[]
  reservas      Reservas[]
  rol           Roles       @relation(fields: [rolId], references: [id])
}

model Opiniones {
  id            String   @id @default(uuid())
  reservaId     String
  usuarioId     String
  puntuacion    Int
  comentario    String
  fechaCreacion DateTime @default(now())
  reserva       Reservas @relation(fields: [reservaId], references: [id])
  usuario       Usuarios @relation(fields: [usuarioId], references: [id])
}

model Agencias {
  id              String     @id @default(uuid())
  nombreComercial String
  contacto        String
  correo          String?
  movil           String?
  direccion       String
  descuento       Decimal
  urlLogo         String?
  reservas        Reservas[]
}

model Proveedores {
  id            String   @id @default(uuid())
  nombre        String
  contacto      String
  telefono      String
  email         String
  direccion     String
  indicaciones  String?
  estado        Boolean  @default(true)
  fechaRegistro DateTime @default(now())
  tarifas       Tarifas[]
}

model Tarifas {
  id               String      @id @default(uuid())
  proveedorId      String
  zonaId           String
  precioPorPersona Decimal
  precioPrivado    Decimal
  temporadaId      String
  reservas         Reservas[]
  proveedor        Proveedores @relation(fields: [proveedorId], references: [id])
  temporada        Temporadas  @relation(fields: [temporadaId], references: [id])
  zona             Zonas       @relation(fields: [zonaId], references: [id])
}

model Reservas {
  id                String                         @id @default(uuid())
  folio             String
  agenciaId         String
  tarifaId          String
  usuarioId         String
  numeroVuelo       String
  aerolinea         String
  horarioLlegada    DateTime
  correoCliente     String
  telefonoCliente   String
  hotelCliente      String
  fechaServicio     DateTime
  numeroPasajeros   Int
  precioTotal       Decimal
  tipoServicio      String
  estado            String
  motivoCancelacion String?
  fechaCreacion     DateTime                       @default(now())
  opiniones         Opiniones[]
  pagos             Pagos[]
  agencia           Agencias                       @relation(fields: [agenciaId], references: [id])
  tarifa            Tarifas                        @relation(fields: [tarifaId], references: [id])
  usuario           Usuarios                       @relation(fields: [usuarioId], references: [id])
  reservasServicios ReservasServiciosAdicionales[]
}

model ReservasServiciosAdicionales {
  reservaId           String
  servicioAdicionalId String
  cantidad            Int
  reserva             Reservas             @relation(fields: [reservaId], references: [id])
  servicioAdicional   ServiciosAdicionales @relation(fields: [servicioAdicionalId], references: [id])

  @@id([reservaId, servicioAdicionalId])
}

model ServiciosAdicionales {
  id                String                         @id @default(uuid())
  nombre            String
  precio            Decimal
  reservasServicios ReservasServiciosAdicionales[]
}

model Pagos {
  id         String   @id @default(uuid())
  reservaId  String
  metodoPago String
  monto      Decimal
  estado     String
  fechaPago  DateTime
  reserva    Reservas @relation(fields: [reservaId], references: [id])
}

model Zonas {
  id      String @id @default(uuid())
  nombre  String
  estado  Boolean @default(true)
  tarifas Tarifas[]
  ubicaciones Ubicaciones[]
}

model Ubicaciones {
  id          String @id @default(uuid())
  zonaId      String
  nombre      String
  direccion   String
  latitudA    Float
  longitudA   Float
  latitudB    Float
  longitudB   Float
  descripcion String
  zona        Zonas @relation(fields: [zonaId], references: [id])
}

model Temporadas {
  id          String   @id @default(uuid())
  nombre      String
  fechaInicio DateTime
  fechaFin    DateTime
  estado      Boolean  @default(true)
  tarifas     Tarifas[]
}
